plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.192'
}

version = mod_version
group = mod_group_id

repositories {
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.architectury.dev/" }

    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        arguments.add('--nogui')
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    clientData {
        arguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")

    //runtimeOnly "dev.architectury:architectury-neoforge:${architectury_version}"
    //runtimeOnly "me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}"
    //runtimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version         : minecraft_version,
            minecraft_version_range   : minecraft_version_range,
            neo_version               : neo_version,
            neo_version_range         : neo_version_range,
            loader_version_range      : loader_version_range,
            mod_id                    : mod_id,
            mod_name                  : mod_name,
            mod_license               : mod_license,
            mod_version               : mod_version,
            mod_authors               : mod_authors,
            mod_description           : mod_description,
            jei_version_range         : jei_version_range,
            rei_version_range         : rei_version_range,
            architectury_version_range: architectury_version_range,
            cloth_config_version_range: cloth_config_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = "file://${project.projectDir}/repo"
        }
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
